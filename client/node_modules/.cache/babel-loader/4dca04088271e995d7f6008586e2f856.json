{"ast":null,"code":"var _jsxFileName = \"D:\\\\DB_miniProject\\\\Test-Drive-Management-System\\\\client\\\\src\\\\pages\\\\Administrate.js\";\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { ManagerNavBar } from \"../components/ManagerNavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Administrate = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Manager!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ManagerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Executive Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setExeName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mobile No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setExeMobNo(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExe,\n        children: \"Add executive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showExes,\n        children: \"Show executives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), exeList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"executives\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: val.mobno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updexe(val.eid);\n            },\n            children: \"Update this executive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              delexe(val.eid);\n            },\n            children: \"Delete this executive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Administrate;\nvar _c;\n$RefreshReg$(_c, \"Administrate\");","map":{"version":3,"names":["React","useEffect","useState","Axios","ManagerNavBar","Administrate","event","setExeName","target","value","setExeMobNo","addExe","showExes","exeList","map","val","key","name","mobno","updexe","eid","delexe"],"sources":["D:/DB_miniProject/Test-Drive-Management-System/client/src/pages/Administrate.js"],"sourcesContent":["import React , {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {ManagerNavBar} from \"../components/ManagerNavBar\";\r\n\r\nexport const Administrate = ()=> {\r\n    return (\r\n        <div>\r\n            <div>\r\n            <h1>Welcome Manager!!</h1>\r\n            {<ManagerNavBar/>}\r\n            <hr></hr>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Executive Name</label>\r\n                <input \r\n                    type = \"text\"\r\n                    onChange = {(event)=> {\r\n                    setExeName(event.target.value);\r\n                    }}\r\n                />\r\n                <label>Mobile No</label>\r\n                <input \r\n                    type = \"text\"\r\n                    onChange = {(event)=> {\r\n                    setExeMobNo(event.target.value);\r\n                    }}\r\n                />\r\n                <button onClick = {addExe}>Add executive</button>\r\n                <hr></hr>\r\n\r\n            </div>\r\n                \r\n            <div>\r\n                    \r\n                    <button onClick = {showExes}>Show executives</button>\r\n\r\n                    {exeList.map( (val, key)=> {\r\n                    return <div className='executives'>\r\n                                <h2>{val.name}</h2>\r\n                                <h2>{val.mobno}</h2>\r\n                                <button onClick = {()=> {updexe(val.eid)}} >Update this executive</button>\r\n                                <button onClick = {()=> {delexe(val.eid)}} >Delete this executive</button>\r\n                            </div>\r\n                            \r\n                    })}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,QAAO,6BAA6B;AAAC;AAE1D,OAAO,MAAMC,YAAY,GAAG,MAAK;EAC7B,oBACI;IAAA,wBACI;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eACzB,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eACjB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACH,eAEN;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,eAC7B;QACI,IAAI,EAAG,MAAM;QACb,QAAQ,EAAKC,KAAK,IAAI;UACtBC,UAAU,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;QAC9B;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QACI,IAAI,EAAG,MAAM;QACb,QAAQ,EAAKH,KAAK,IAAI;UACtBI,WAAW,CAACJ,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;QAC/B;MAAE;QAAA;QAAA;QAAA;MAAA,QACJ,eACF;QAAQ,OAAO,EAAIE,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACjD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAEP,eAEN;MAAA,wBAEQ;QAAQ,OAAO,EAAIC,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,EAEpDC,OAAO,CAACC,GAAG,CAAE,CAACC,GAAG,EAAEC,GAAG,KAAI;QAC3B,oBAAO;UAAK,SAAS,EAAC,YAAY;UAAA,wBACtB;YAAA,UAAKD,GAAG,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACnB;YAAA,UAAKF,GAAG,CAACG;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAQ,OAAO,EAAI,MAAK;cAACC,MAAM,CAACJ,GAAG,CAACK,GAAG,CAAC;YAAA,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgC,eAC1E;YAAQ,OAAO,EAAI,MAAK;cAACC,MAAM,CAACN,GAAG,CAACK,GAAG,CAAC;YAAA,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgC;QAAA;UAAA;UAAA;UAAA;QAAA,QACxE;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KA9CYf,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}