{"ast":null,"code":"var _jsxFileName = \"D:\\\\DB_miniProject\\\\Test-Drive-Management-System\\\\client\\\\src\\\\pages\\\\Administrate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { ManagerNavBar } from \"../components/ManagerNavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Administrate = () => {\n  _s();\n  //Required functions and variables\n\n  const [exeName, setExeName] = useState(\"\");\n  //const [newExeName, updExeName] = useState(\"\");\n  const [exeMobNo, setExeMobNo] = useState(\"\");\n  //const [newExeMobNo, updExeMobNo] = useState(\"\");\n  const [exeList, setExeList] = useState([]);\n  const addExe = () => {\n    if (exeName.length > 0 && exeMobNo.length == 10) {\n      Axios.post(\"http://localhost:3005/addExe\", {\n        exeName: exeName,\n        exeMobNo: exeMobNo\n      }).then(() => {\n        setExeList([...exeList, {\n          name: exeName,\n          mobno: exeMobNo\n        }]);\n      });\n    } else {\n      alert(\"Invalid data\");\n    }\n  };\n  const showExes = () => {\n    Axios.get(\"http://localhost:3005/exeDetails\").then(response => {\n      setExeList(response.data);\n    });\n  };\n  const updexe = id => {\n    if (exeName.length > 0 && exeMobNo.length == 10) {\n      Axios.put(\"http://localhost:3005/updateExe\", {\n        exeName: exeName,\n        exeMobNo: exeMobNo,\n        exeId: id\n      }).then(response => {\n        setExeList(exeList.map(val => {\n          if (val.eid == id) {\n            return {\n              eid: id,\n              name: exeName,\n              mobno: exeMobNo\n            };\n          } else {\n            return val;\n          }\n        }));\n        alert(\"update success\");\n      });\n    } else {\n      alert(\"Invalid data\");\n    }\n  };\n  const delexe = id => {\n    Axios.delete(`http://localhost:3005/deleteExe/${id}`).then(response => {\n      setExeList(exeList.filter(val => {\n        if (val.id != id) {\n          return val;\n        }\n      }));\n    });\n  };\n\n  //Render page content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Manager!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ManagerNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Executive Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setExeName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mobile No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setExeMobNo(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExe,\n        children: \"Add executive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showExes,\n        children: \"Show executives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), exeList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"executives\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: val.mobno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updexe(val.eid);\n            },\n            children: \"Update this executive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              delexe(val.eid);\n            },\n            children: \"Delete this executive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Administrate, \"oO/YPx8XADXKMDHdtGrEPoyYAqc=\");\n_c = Administrate;\nvar _c;\n$RefreshReg$(_c, \"Administrate\");","map":{"version":3,"names":["React","useEffect","useState","Axios","ManagerNavBar","Administrate","exeName","setExeName","exeMobNo","setExeMobNo","exeList","setExeList","addExe","length","post","then","name","mobno","alert","showExes","get","response","data","updexe","id","put","exeId","map","val","eid","delexe","delete","filter","event","target","value","key"],"sources":["D:/DB_miniProject/Test-Drive-Management-System/client/src/pages/Administrate.js"],"sourcesContent":["import React , {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {ManagerNavBar} from \"../components/ManagerNavBar\";\r\n\r\nexport const Administrate = ()=> {\r\n\r\n    //Required functions and variables\r\n\r\n    const [exeName, setExeName] = useState(\"\");\r\n    //const [newExeName, updExeName] = useState(\"\");\r\n    const [exeMobNo, setExeMobNo] = useState(\"\");\r\n    //const [newExeMobNo, updExeMobNo] = useState(\"\");\r\n    const [exeList, setExeList] = useState([]);\r\n\r\n    const addExe = ()=> {\r\n        if(exeName.length > 0 && exeMobNo.length == 10){\r\n        Axios.post(\"http://localhost:3005/addExe\", \r\n        {exeName : exeName, exeMobNo : exeMobNo\r\n        }).then(() => {\r\n            setExeList([\r\n            ...exeList,\r\n            {\r\n                name : exeName,\r\n                mobno : exeMobNo\r\n            }\r\n            ]);\r\n        });\r\n        }\r\n        else{\r\n            alert(\"Invalid data\");\r\n        }\r\n    };\r\n\r\n    const showExes = ()=>{\r\n        Axios.get(\"http://localhost:3005/exeDetails\").then((response)=> {\r\n            setExeList(response.data);\r\n        });\r\n    };\r\n\r\n    const updexe = (id)=>{\r\n        if(exeName.length > 0 && exeMobNo.length == 10){\r\n        Axios.put(\"http://localhost:3005/updateExe\", \r\n        {exeName : exeName, exeMobNo : exeMobNo, exeId : id\r\n        }).then((response)=> {\r\n            setExeList(exeList.map((val)=>{\r\n                if(val.eid == id){\r\n                    return {eid : id, name : exeName, mobno : exeMobNo};\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            }));\r\n            alert(\"update success\");\r\n            }\r\n        );\r\n        }\r\n        else{\r\n        alert(\"Invalid data\");\r\n        }\r\n    };\r\n\r\n    const delexe = (id)=> {\r\n        Axios.delete(`http://localhost:3005/deleteExe/${id}`).then((response)=> {\r\n            setExeList(\r\n            exeList.filter((val)=> {\r\n            if(val.id != id){\r\n                return val;\r\n            }\r\n            })\r\n            );\r\n        });\r\n    };\r\n\r\n    //Render page content\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <h1>Welcome Manager!!</h1>\r\n                {<ManagerNavBar/>}\r\n            <hr></hr>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Executive Name</label>\r\n                <input \r\n                    type = \"text\"\r\n                    onChange = {(event)=> {\r\n                    setExeName(event.target.value);\r\n                    }}\r\n                />\r\n                <label>Mobile No</label>\r\n                <input \r\n                    type = \"text\"\r\n                    onChange = {(event)=> {\r\n                    setExeMobNo(event.target.value);\r\n                    }}\r\n                />\r\n                <button onClick = {addExe}>Add executive</button>\r\n                <hr></hr>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick = {showExes}>Show executives</button>\r\n                    {exeList.map( (val, key)=> {\r\n                    return <div className='executives'>\r\n                                <h2>{val.name}</h2>\r\n                                <h2>{val.mobno}</h2>\r\n                                <button onClick = {()=> {updexe(val.eid)}} >Update this executive</button>  \r\n                                <button onClick = {()=> {delexe(val.eid)}} >Delete this executive</button>\r\n                            </div>\r\n                            \r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}