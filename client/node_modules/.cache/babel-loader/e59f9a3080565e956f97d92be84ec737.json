{"ast":null,"code":"var _jsxFileName = \"D:\\\\DB_miniProject\\\\Test-Drive-Management-System\\\\client\\\\src\\\\components\\\\Manager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { ManagerNavBar } from \"./ManagerNavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Manager = () => {\n  _s();\n  //Required functions and variables\n  const [testDriveList, setTestDriveList] = useState([]);\n\n  //On page refresh\n  useEffect(() => {\n    Axios.get(\"http://localhost:3005/confirmed\").then(response => {\n      setTestDriveList(response);\n    });\n  }, []);\n\n  //Confirmed testdrives functions-----------------------------------------\n\n  const doneTestDrive = id => {\n    if (vehModel.length > 0 && vehType.length == 1) {\n      Axios.put(\"http://localhost:3005/done\", {\n        name: vehModel,\n        type: vehType,\n        id: id\n      }).then(response => {\n        setVehList(vehList.map(val => {\n          if (val.vehid == id) {\n            return {\n              vehid: id,\n              model: vehModel,\n              type: vehType\n            };\n          } else {\n            return val;\n          }\n        }));\n        alert(\"update success\");\n      });\n    } else {\n      alert(\"Invalid data\");\n    }\n  };\n\n  //-----------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ManagerNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), testDriveList.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vehicles\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: val.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: val.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            doneTestDrive(val.vehid);\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Manager, \"36ZyRP6qC/vWowUzKEJTa3bp/Bo=\");\n_c = Manager;\nvar _c;\n$RefreshReg$(_c, \"Manager\");","map":{"version":3,"names":["React","useEffect","useState","Axios","ManagerNavBar","Manager","testDriveList","setTestDriveList","get","then","response","doneTestDrive","id","vehModel","length","vehType","put","name","type","setVehList","vehList","map","val","vehid","model","alert","key"],"sources":["D:/DB_miniProject/Test-Drive-Management-System/client/src/components/Manager.js"],"sourcesContent":["import React , {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {ManagerNavBar} from \"./ManagerNavBar\";\r\n\r\n\r\nexport const Manager = ()=> {\r\n\r\n    //Required functions and variables\r\n    const [testDriveList, setTestDriveList] = useState([]);\r\n\r\n\r\n    //On page refresh\r\n    useEffect(()=>{\r\n        Axios.get(\"http://localhost:3005/confirmed\").then((response) => {\r\n          setTestDriveList(response);\r\n        });\r\n    }, [])\r\n\r\n    //Confirmed testdrives functions-----------------------------------------\r\n\r\n    const doneTestDrive = (id)=>{\r\n        if(vehModel.length > 0 && vehType.length == 1){\r\n        Axios.put(\"http://localhost:3005/done\", \r\n        {name : vehModel, type : vehType, id : id\r\n        }).then((response)=> {\r\n            setVehList(vehList.map((val)=>{\r\n                if(val.vehid == id){\r\n                    return {vehid : id, model : vehModel, type : vehType};\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            }));\r\n            alert(\"update success\");\r\n            }\r\n        );\r\n        }\r\n        else{\r\n        alert(\"Invalid data\");\r\n        }\r\n    };\r\n\r\n    //-----------------------------------------------------------------------\r\n\r\n    return (\r\n        <div>\r\n            <h1>Manager</h1>\r\n            {<ManagerNavBar/>}\r\n            \r\n            <hr></hr>\r\n            \r\n            {testDriveList.map( (val, key)=> {\r\n                        return <div className='vehicles'>\r\n                                    <h2>{val.model}</h2>\r\n                                    <h2>{val.type}</h2>\r\n                                    <button onClick = {()=> {doneTestDrive(val.vehid)}} >Done</button>  \r\n                                </div>\r\n                                \r\n            })}\r\n\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,QAAO,iBAAiB;AAAC;AAG9C,OAAO,MAAMC,OAAO,GAAG,MAAK;EAAA;EAExB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAGtD;EACAD,SAAS,CAAC,MAAI;IACVE,KAAK,CAACK,GAAG,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC9DH,gBAAgB,CAACG,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMC,aAAa,GAAIC,EAAE,IAAG;IACxB,IAAGC,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIC,OAAO,CAACD,MAAM,IAAI,CAAC,EAAC;MAC9CX,KAAK,CAACa,GAAG,CAAC,4BAA4B,EACtC;QAACC,IAAI,EAAGJ,QAAQ;QAAEK,IAAI,EAAGH,OAAO;QAAEH,EAAE,EAAGA;MACvC,CAAC,CAAC,CAACH,IAAI,CAAEC,QAAQ,IAAI;QACjBS,UAAU,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAG;UAC1B,IAAGA,GAAG,CAACC,KAAK,IAAIX,EAAE,EAAC;YACf,OAAO;cAACW,KAAK,EAAGX,EAAE;cAAEY,KAAK,EAAGX,QAAQ;cAAEK,IAAI,EAAGH;YAAO,CAAC;UACzD,CAAC,MACI;YACD,OAAOO,GAAG;UACd;QACJ,CAAC,CAAC,CAAC;QACHG,KAAK,CAAC,gBAAgB,CAAC;MACvB,CAAC,CACJ;IACD,CAAC,MACG;MACJA,KAAK,CAAC,cAAc,CAAC;IACrB;EACJ,CAAC;;EAED;;EAEA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACf,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eAEjB;MAAA;MAAA;MAAA;IAAA,QAAS,EAERnB,aAAa,CAACe,GAAG,CAAE,CAACC,GAAG,EAAEI,GAAG,KAAI;MACrB,oBAAO;QAAK,SAAS,EAAC,UAAU;QAAA,wBACpB;UAAA,UAAKJ,GAAG,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACpB;UAAA,UAAKF,GAAG,CAACJ;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACnB;UAAQ,OAAO,EAAI,MAAK;YAACP,aAAa,CAACW,GAAG,CAACC,KAAK,CAAC;UAAA,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAChE;IAE1B,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAEd,CAAC;AAAA,GAzDYlB,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}